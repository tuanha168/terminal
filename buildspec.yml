version: 0.2

env:
  secrets-manager:
    # TODO: update arn
    DOCKER_USER: arn:aws:secretsmanager:us-east-1:556527881658:secret:terraform-secretManager-ylt33tdn2b8-hvNI5s:DOCKER_USER
    DOCKER_TOKEN: arn:aws:secretsmanager:us-east-1:556527881658:secret:terraform-secretManager-ylt33tdn2b8-hvNI5s:DOCKER_TOKEN
    TASK_ROLE: arn:aws:secretsmanager:us-east-1:556527881658:secret:terraform-secretManager-ylt33tdn2b8-hvNI5s:TASK_ROLE

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version

      # TODO: update arn
      - REPOSITORY_URI=556527881658.dkr.ecr.us-east-1.amazonaws.com

      # login to Elastic container registry
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin

      - IMAGE_REPO=terminal
      - IMAGE_URI_WEB=$REPOSITORY_URI/$IMAGE_REPO
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - LOG_GROUP=/ecs/$IMAGE_REPO

  pre_build:
    commands:
      - echo 'Start pre_build phase'
      - yarn -v
      - node --version

  build:
    commands:
      - echo Building the Docker image...
      - docker build --platform linux/amd64 -t $IMAGE_REPO -f ./deployment/ecs/Dockerfile . --no-cache
      - docker tag $IMAGE_REPO:latest $IMAGE_URI_WEB:latest
      - docker tag $IMAGE_REPO:latest $IMAGE_URI_WEB:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker image ls -a
      - docker push $IMAGE_URI_WEB:latest
      - docker push $IMAGE_URI_WEB:$IMAGE_TAG
      - cat taskdef-template.json | sed -e s@\<IMAGE_NGINX\>@$IMAGE_URI_WEB:$IMAGE_TAG@ -e s@\<LOG_GROUP\>@$LOG_GROUP@ -e s@\<TASK_ROLE\>@$TASK_ROLE@ -e s@\<EXECUTION_ROLE\>@$TASK_ROLE@ > taskdef.json

artifacts:
  files:
    - appspec.yml
    - taskdef.json
